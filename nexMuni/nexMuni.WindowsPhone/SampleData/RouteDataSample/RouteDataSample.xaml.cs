//      *********    DO NOT MODIFY THIS FILE     *********
//      This file is regenerated by a design tool. Making
//      changes to this file can cause errors.
namespace Blend.SampleData.RouteDataSample
{
	using System; 
	using System.ComponentModel;

// To significantly reduce the sample data footprint in your production application, you can set
// the DISABLE_SAMPLE_DATA conditional compilation constant and disable sample data at runtime.
#if DISABLE_SAMPLE_DATA
	internal class RouteDataSample { }
#else

	public class RouteDataSample : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		public RouteDataSample()
		{
			try
			{
				Uri resourceUri = new Uri("ms-appx:/SampleData/RouteDataSample/RouteDataSample.xaml", UriKind.RelativeOrAbsolute);
				Windows.UI.Xaml.Application.LoadComponent(this, resourceUri);
			}
			catch
			{
			}
		}

		private Stops _Stops = new Stops();

		public Stops Stops
		{
			get
			{
				return this._Stops;
			}
		}
	}

	public class Stops : System.Collections.ObjectModel.ObservableCollection<StopsItem>
	{ 
	}

	public class StopsItem : INotifyPropertyChanged
	{
		public event PropertyChangedEventHandler PropertyChanged;

		protected virtual void OnPropertyChanged(string propertyName)
		{
			if (this.PropertyChanged != null)
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}

		private double _RouteNum = 0;

		public double RouteNum
		{
			get
			{
				return this._RouteNum;
			}

			set
			{
				if (this._RouteNum != value)
				{
					this._RouteNum = value;
					this.OnPropertyChanged("RouteNum");
				}
			}
		}

		private string _times = string.Empty;

		public string times
		{
			get
			{
				return this._times;
			}

			set
			{
				if (this._times != value)
				{
					this._times = value;
					this.OnPropertyChanged("times");
				}
			}
		}

		private string _RouteName = string.Empty;

		public string RouteName
		{
			get
			{
				return this._RouteName;
			}

			set
			{
				if (this._RouteName != value)
				{
					this._RouteName = value;
					this.OnPropertyChanged("RouteName");
				}
			}
		}
	}
#endif
}
